{"remainingRequest":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/src/views/Register.vue?vue&type=style&index=0&id=63ae9146&scoped=true&lang=css&","dependencies":[{"path":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/src/views/Register.vue","mtime":1593607082722},{"path":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvbnRlbmVkb3JyZWdpc3RvIHsKICBtYXJnaW4tdG9wOiAxNTBweDsKfQppbnB1dCB7CiAgd2lkdGg6IDUwMHB4OwogIGhlaWdodDogMzBweDsKICBmb250LXNpemU6IDEuMmVtOwp9CmJ1dHRvbiB7CiAgd2lkdGg6IDMwMHB4Owp9CgpwIHsKICBmb250LXNpemU6IDEuM2VtOwp9CgphIHsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgZm9udC1zaXplOiAxLjFlbTsKfQoKYnV0dG9uIHsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgZm9udC1zaXplOiAxZW07CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgcGFkZGluZzogMTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMzIsIDMzLCAzNCk7CiAgZm9udC1mYW1pbHk6ICJVYnVudHUiLCBzYW5zLXNlcmlmOwogIGNvbG9yOiAjMWE5OWU3OwogIGJveC1zaGFkb3c6IDAgMCAycHggcmdiKDEyLCAxMiwgMTIpOwp9Cg=="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <!-- Título para la pestaña del navegador -->\n    <vue-headful title=\"Registro\" description=\"Registro de nuevo usuario\" />\n    <!-- Inserción del componente menú en la cabecera de la vista -->\n    <menucustom></menucustom>\n\n    <div class=\"contenedoregisto\">\n      <!-- Uso del vue headful para nombrar los títulos de pag. visibles en navegador -->\n      <vue-headful title=\"Registro\" description=\"Registro de nuevo usuario\" />\n      <h1>Completa todos los campos para registrarte 👇</h1>\n      <br />\n      <!-- Input para campo nombre -->\n      <input type=\"text\" placeholder=\"Tu nombre\" v-model=\"nombre\" />\n      <br />\n      <br />\n      <!-- Input para campo apellidos -->\n      <input type=\"text\" placeholder=\"Tus apellidos\" v-model=\"apellidos\" />\n      <br />\n      <br />\n      <!-- Input para campo apellidos -->\n      <input type=\"email\" placeholder=\"Tu correo electrónico\" v-model=\"mail\" />\n      <br />\n      <br />\n\n      <!--Input para campo password -->\n      <input type=\"password\" placeholder=\"Tu contraseña\" v-model=\"contrasenha\" />\n      <br />\n      <br />\n      <!-- Botón con llamada a la función Login -->\n      <button @click=\"registerUser()\">REGISTRO</button>\n      <br />\n      <p v-show=\"required\">Rellena todos los datos, por favor</p>\n      <br />\n    </div>\n  </div>\n</template>\n\n<script>\n//IMPORTACIONES PARA\n// componentes locales\nimport menucustom from \"@/components/MenuCustom.vue\";\n// Títulos de página visibles en navegador\nimport vueHeadful from \"vue-headful\";\n// Mensajes custom\nimport Swal from \"sweetalert2\";\n// Manejo de rutas, endpoints...\nimport axios from \"axios\";\n\nexport default {\n  name: \"register\",\n  components: { vueHeadful, menucustom },\n\n  data() {\n    return {\n      // Inicializamos strings vacíos para los campos que vamos a procesar.\n      nombre: \"\",\n      apellidos: \"\",\n      mail: \"\",\n      contrasenha: \"\",\n      // Con el uso de este booleano hacemos la verificación de si hay campos vacíos\n      correctData: false,\n      // Con el uso de este booleano podemos manejar el v-show que hace visible un mensaje de alerta en el HTML\n      required: false,\n    };\n  },\n\n  methods: {\n    //Validamos que no haya datos sin rellenar\n    validatingData() {\n      if (\n        this.nombre === \"\" ||\n        this.apellidos === \"\" ||\n        this.mail === \"\" ||\n        this.contrasenha === \"\"\n      ) {\n        //Damos valores a los booleanos en función de los resultados para regular el uso del v-show y el control del paso de datos.\n        this.correctData = false;\n        this.required = true;\n      } else {\n        this.correctData = true;\n        this.required = false;\n      }\n    },\n\n    //FUNCIÓN PARA AÑADIR USUARIO CON LOS PARÁMETROS REQUERIDOS\n    registerUser(nombre, apellidos, mail, contrasenha) {\n      //Comprobamos que todos los datos están cumplimentados\n      this.validatingData();\n      if (this.correctData === true) {\n        let self = this;\n        //Si es correcto enviamos la petición post con los datos del formulario\n        axios\n          .post(\"http://localhost:3003/usuarios\", {\n            nombre: self.nombre,\n            apellidos: self.apellidos,\n            mail: self.mail,\n            contrasenha: self.contrasenha,\n          })\n\n          .then(function (response) {\n            // Enviamos mensaje de confirmación de registro\n            Swal.fire({\n              title: \"✔️\",\n              text: \"Te has registrado con éxito, debes abrir tu correo electrónico y validar tu cuenta pinchando en el enlace que te enviamos. Una vez que esté activada puedes loguearte con tus datos.\",\n              confirmButtonText: \"O.K\",\n              confirmButtonColor: \"#1CA1F2\",\n             \n            });\n            //Limpiamos los campos\n            self.emptyFields();\n            console.log(response);\n          })\n          //Recogemos posibles errores\n          .catch(function (error) {\n            console.log(error);\n\n            Swal.fire({\n              title: \"⚠️\",\n              text:\n                \"Ha habido un error, es posible que este usuario ya esté registrado\",\n              confirmButtonText: \"O.K\",\n              timer: 3000,\n            });\n          });\n\n        //Si faltan campos por rellenar se viene por aquí y avisa.\n      } else {\n        Swal.fire({\n          title: \"⚠️\",\n          text: \"Debes rellenar todos los campos\",\n          timer: 3000,\n        });\n      }\n    },\n    //Función para dejar los campos del formulario limpios\n    emptyFields() {\n      (this.nombre = \"\"),\n        (this.apellidos = \"\"),\n        (this.mail = \"\"),\n        (this.contrasenha = \"\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.contenedorregisto {\n  margin-top: 150px;\n}\ninput {\n  width: 500px;\n  height: 30px;\n  font-size: 1.2em;\n}\nbutton {\n  width: 300px;\n}\n\np {\n  font-size: 1.3em;\n}\n\na {\n  text-decoration: none;\n  font-size: 1.1em;\n}\n\nbutton {\n  border-radius: 5px;\n  font-size: 1em;\n  font-weight: bold;\n  padding: 10px;\n  background-color: rgb(32, 33, 34);\n  font-family: \"Ubuntu\", sans-serif;\n  color: #1a99e7;\n  box-shadow: 0 0 2px rgb(12, 12, 12);\n}\n</style>"]}]}