{"remainingRequest":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/src/views/Profile.vue?vue&type=style&index=0&id=ced23842&scoped=true&lang=css&","dependencies":[{"path":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/src/views/Profile.vue","mtime":1592958259700},{"path":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hab07/Desktop/Repo-Proyecto/PROYECTO/Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tb2RhbCB7CiAgcG9zaXRpb246IGZpeGVkOwogIHRvcDogMDsKICBsZWZ0OiAwOwogIGJvdHRvbTogMDsKICBib3JkZXItcmFkaXVzOiAxNTBweDsKICB3aWR0aDogMTAwJTsKfQoKLm1vZGFsYm94IHsKICBiYWNrZ3JvdW5kOiAjZmVmZWZlOwogIG1hcmdpbjogMTUlIGF1dG87CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjODg4OwogIHdpZHRoOiA0MCU7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgYm9yZGVyLXJhZGl1czogNTBweDsKICBib3JkZXI6IHNvbGlkIDJweCBibGFjazsKICBib3gtc2hhZG93OiAwIDAgMXB4IHJnYigxMiwgMTIsIDEyKTsKfQo="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <!-- Definimos el título de página visible en navegador -->\n    <vue-headful title=\"Perfil\" description=\"Tu perfil\" />\n\n    <!-- Inserción del componente menú en la cabecera de la vista -->\n    <menucustom></menucustom>\n\n    <!--Sección de datos personales -->\n    <div class=\"informacionusuario\">\n      <h3>👤 Hola {{ user.nombre }}</h3>\n      <img :src=\"user.url_foto\" alt=\"Foto de perfil de usuario\" />\n      <p>Miembro desde {{ user.fecha_registro | moment(\" D-MM-YYYY\") }}</p>\n      <p>Miembro con rol de: {{ user.rol }}</p>\n    </div>\n    <!-- Pendiente de revisión la edición de usuario, especialmente por las fotos -->\n    <div v-show=\"!seeEditable\">\n      <div class=\"datosparaeditar\">\n        <p class=\"nombre\">{{ user.nombre }}</p>\n        <p class=\"apellidos\">{{ user.apellidos }}</p>\n        <!--  <p class=\"url_foto\">{{ user.url_foto }}</p> -->\n        <p class=\"descripcion\">{{ user.descripcion }}</p>\n      </div>\n    </div>\n    <button @click=\"showEditable()\">Actualiza tu perfil</button>\n    <hr />\n\n    <div class=\"editar\" v-show=\"seeEditable\">\n      <label for=\"nombre\">Tu nombre:</label>\n      <input\n        type=\"text\"\n        id=\"nombre\"\n        name=\"nombre\"\n        v-model=\"nuevoNombre\"\n        placeholder=\"nombre\"\n      />\n      <br />\n\n      <label for=\"apellidos\">Tus apellidos:</label>\n      <input\n        type=\"text\"\n        id=\"apellidos\"\n        name=\"apellidos\"\n        v-model=\"nuevoApellido\"\n        placeholder=\"apellidos\"\n      />\n      <br />\n\n      <label for=\"file\">Selecciona tu nueva foto:</label>\n      <input type=\"file\" id=\"file\" name=\"file\" />\n      <br />\n      <label for=\"descripcion\">Sobre ti:</label>\n      <input\n        type=\"text\"\n        id=\"descripcion\"\n        name=\"descripcion\"\n        v-model=\"nuevaDescripcion\"\n        placeholder=\"descripcion\"\n      />\n      <br />\n      <br />\n      <button @click=\"confirmEditUser()\">Guardar</button>\n      <hr />\n\n      <hr />\n    </div>\n    <div>\n      <!-- Aquí mostramos el historial de concursos del usuario -->\n      <div class=\"historialConcurso\">\n        <h3>Historial de concursos</h3>\n        <!-- Recorremos el array dinámicamente, contiene la información del get de la función en methods -->\n        <ul v-for=\"historia in historial\" :key=\"historia.id\">\n          <li>\n            <b>{{ historia.nombre_concurso }}</b>\n          </li>\n          <li><b>Bases:</b> {{ historia.descripcion }}</li>\n          <li>\n            <b>Apertura:</b> {{ historia.fecha_inicio | moment(\" D-MM-YYYY\") }}\n          </li>\n          <li>\n            <b>Cierre:</b> {{ historia.fecha_final | moment(\" D-MM-YYYY\") }}\n          </li>\n          <!-- Sólo si el concurso ha sido valorado se muestra su valoración -->\n          <div v-if=\"historia.valoracion > 0\">\n            <li>\n              Has valorado este concurso con\n              {{ historia.valoracion }} ⭐️\n            </li>\n          </div>\n          <li>--------------------------------------------------</li>\n        </ul>\n        <!-- Botón que llama a la función para ver el historial -->\n        <button v-if=\"historial\" @click=\"seeHistory()\">\n          Ver historial\n        </button>\n        <hr />\n      </div>\n    </div>\n    <div class=\"historialpendientes\">\n      <h3>Tus concursos pendientes de valoración</h3>\n      <!-- Desde aquí el usuario puede votar los concursos ya finalizados en los que se ha inscrito -->\n      <!-- Recorremos el array dinámicamente y necesitamos el index para aplicar el voto -->\n      <ul v-for=\"(pendiente, index) in pendientes\" :key=\"pendiente.id\">\n        <li>\n          <b>{{ pendiente.nombre_concurso }}</b>\n        </li>\n        <li><b>Bases:</b> {{ pendiente.descripcion }}</li>\n        <li>\n          <b>Apertura:</b> {{ pendiente.fecha_inicio | moment(\" D MM YYYY\") }}\n        </li>\n        <li>\n          <b>Cierre:</b> {{ pendiente.fecha_final | moment(\" D MM YYYY\") }}\n        </li>\n        <!-- El botón de votar se muestra si no hay voto -->\n        <button\n          v-if=\"pendiente.valoracion !== number\"\n          @click=\"openModal(index)\"\n        >\n          VOTAR\n        </button>\n        <div v-show=\"modal\" class=\"modal\">\n          <div class=\"modalbox\">\n            <h3>¿Cómo valoras tu experiencia?</h3>\n\n            <star-rating\n              @rating-selected=\"rating = $event\"\n              :rating=\"rating\"\n              v-bind:star-size=\"20\"\n            ></star-rating>\n            <button @click=\"newRating(votedConcourse, rating)\">\n              Este es mi voto!\n            </button>\n            <button @click=\"closeModal()\">Cerrar</button>\n          </div>\n        </div>\n      </ul>\n      <button @click=\"seePendingRatings()\">\n        Ver concursos ya terminados\n      </button>\n    </div>\n    <hr />\n\n    <div class=\"proximosConcursos\">\n      <h3>Concursos en activo</h3>\n      <!-- Recorremos el array dinámicamente, contiene la información del get de la función en methods -->\n      <ul v-for=\"(proxconcurso, index) in proxconcursos\" :key=\"proxconcurso.id\">\n        <li>\n          <b>{{ proxconcurso.nombre }}</b>\n        </li>\n        <li><b>Bases:</b> {{ proxconcurso.descripcion }}</li>\n        <li>\n          Apertura:\n          {{ proxconcurso.fecha_inicio | moment(\" D-MM-YYYY\") }}\n        </li>\n        <li>\n          <b>Cierre:</b> {{ proxconcurso.fecha_final | moment(\" D-MM-YYYY\") }}\n        </li>\n        <button @click=\"cancelSuscription(index)\">\n          Cancelar suscripción\n        </button>\n        <li>--------------------------------------------------</li>\n      </ul>\n      <!-- Botón que llama a la función para ver el historial -->\n      <button @click=\"seeNextConcourses()\">\n        Pŕoximos concursos\n      </button>\n      <hr />\n    </div>\n  </div>\n</template>\n\n<script>\n// EXPORTAMOS PARA\n// Libreria para uso de modales\nimport VModal from \"vue-js-modal\";\n// Gestión de fechas\nimport VueMoment from \"vue-moment\";\n\n// Mensajes customizados\nimport Swal from \"sweetalert2\";\n// Incluir valoraciones mediante estrellitas\nimport StarRating from \"vue-star-rating\";\n// Manejar títulos de página en pestaña navegador\nimport vueHeadful from \"vue-headful\";\n// Manejo de endpoints, peticiones, rutas:\nimport axios from \"axios\";\n// Componentes internos\nimport menucustom from \"@/components/MenuCustom.vue\";\n\nexport default {\n  name: \"Profile\",\n  // Componentes de la vista\n  components: { menucustom, vueHeadful, StarRating },\n  data() {\n    return {\n      // Declaración de variables que voy a utilizar para recoger la información\n      id: null,\n      user: {},\n      nuevoNombre: \"\",\n      nuevoApellido: \"\",\n      nuevaDescripcion: \"\",\n      // Booleano para controlar el v-show que contiene el formulario de edición.\n      seeEditable: false,\n      url_foto: \"\",\n      historial: [],\n      concursos: [],\n      rating: 0,\n      modal: false,\n      votedConcourse: {},\n      seeIsVoted: false,\n      mostrarvotables: false,\n      fecha: new Date(),\n      pendientes: [],\n      proxconcursos: [],\n    };\n  },\n\n  methods: {\n    openModal(index) {\n      this.modal = true;\n      this.votedConcourse = this.historial[index];\n    },\n\n    closeModal() {\n      this.modal = false;\n    },\n\n    // FUNCIÓN PARA HACER LA PETICIÓN AL SERVIDOR.\n\n    getDataUser() {\n      const self = this;\n      // Cojo token e id.\n      const token = localStorage.getItem(\"token\");\n      const data = localStorage.getItem(\"id\");\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\n      // Petición get a mi ruta del Back para editar usuarios, concatenamos el id.\n      axios\n        .get(\"http://localhost:3003/usuarios/\" + data)\n\n        .then(function (response) {\n          console.log(response);\n\n          // En user tengo ahora el acceso directo a este usuario concreto.\n          self.user = response.data.data;\n          // Monto la ruta para poder visualizar la imagen que está en la BBDD con un nombre de archivo.\n          self.user.url_foto =\n            \"http://localhost:3003/images/\" + self.user.url_foto;\n        })\n\n        .catch(function (error) {\n          alert(\"Socorri\");\n          console.log(error.response.data.message);\n        });\n    },\n\n    // FUNCIÓN PARA GUARDAR LOS CAMBIOS\n    confirmEditUser() {\n      const self = this;\n      //Tengo la autenticación...\n      const data = localStorage.getItem(\"id\");\n      const token = localStorage.getItem(\"token\");\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      //Hago la petición a servidor\n      axios\n        .put(\"http://localhost:3003/usuarios/editar/\" + data, {\n          nombre: self.nuevoNombre,\n          apellidos: self.nuevoApellido,\n          descripcion: self.nuevaDescripcion,\n          url_foto: self.data.url_foto,\n        })\n        .then(function (response) {\n          self.seeEditable = true;\n        })\n        .catch(function (error) {\n          console.error(error);\n          console.log(error.response.data.message);\n        });\n    },\n\n    showEditable() {\n      this.seeEditable = true;\n      this.nuevoNombre = this.user.nombre;\n      this.nuevoApellido = this.user.apellidos;\n      this.nuevaDescripcion = this.user.descripcion;\n      this.url_foto = this.user.url_foto;\n      console.log(this.user.nombre);\n    },\n\n    seeHistory() {\n      const self = this;\n      // Cojo token e id.\n      const token = localStorage.getItem(\"token\");\n      const data = localStorage.getItem(\"id\");\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\n      console.log(token);\n      console.log(data);\n\n      // Petición get a mi ruta del Back para consultar inscripciones, concatenamos el id.\n      axios\n        .get(\"http://localhost:3003/usuarios/historial/\" + data)\n\n        .then(function (response) {\n          console.log(response);\n\n          // En user tengo ahora el acceso directo a este usuario concreto.\n          self.historial = response.data.data;\n        })\n\n        .catch(function (error) {\n          Swal.fire({\n            title: \"✅\",\n            text: error.response.data.message,\n            confirmButtonText: \"O.K\",\n          }).then((result) => {\n            if (result.value) {\n              self.getDataUser();\n            }\n          });\n          console.log(error.response.data.message);\n        });\n    },\n\n    // FUNCIÓN PARA VER SOLAMENTE LOS CONCURSOS EN LOS QUE SE HA INSCRITO Y ESTÁN PENDIENTES DE VALORACIÓN\n    seePendingRatings() {\n      const self = this;\n      // Cojo token e id.\n      const token = localStorage.getItem(\"token\");\n      const data = localStorage.getItem(\"id\");\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\n      console.log(token);\n      console.log(data);\n\n      // Petición get a mi ruta del Back para consultar inscripciones finalizadas, concatenamos el id.\n      axios\n        .get(\n          \"http://localhost:3003/usuarios/concursos-pendientes-valoracion/\" +\n            data\n        )\n\n        .then(function (response) {\n          console.log(response);\n\n          // En user tengo ahora el acceso directo a este usuario concreto.\n          self.pendientes = response.data.data;\n        })\n\n        .catch(function (error) {\n          Swal.fire({\n            title: \"✅\",\n            text: error.response.data.message,\n            confirmButtonText: \"O.K\",\n          }).then((result) => {\n            if (result.value) {\n              self.getDataUser();\n            }\n          });\n          console.log(error.response.data.message);\n        });\n    },\n\n    //FUNCIÓN PARA QUE EL USUARIO PUNTUE UN CONCURSO EN EL QUE HA PARTICIPADO\n\n    newRating(historia, rating) {\n      self = this;\n\n      const id_concurso = historia.CONCURSOS_id_concurso;\n\n      //Cojo token e id\n      const token = localStorage.getItem(\"token\");\n      const data = localStorage.getItem(\"id\");\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      axios\n        .post(\"http://localhost:3003/valoraciones/\" + id_concurso, {\n          valoracion: rating,\n        })\n\n        .then(function (response) {\n          // Enviamos mensaje de valoración\n          console.log(response);\n\n          Swal.fire({\n            title: \"✅\",\n            text: \"Gracias por valorar este concurso\",\n            confirmButtonText: \"O.K\",\n          }).catch(function (error) {\n            /*  console.log(error.response.data); */\n            Swal.fire({\n              title: \"⚠️\",\n              text:\n                \"Ha habido un error, es posible que ya hayas valorado este concurso\",\n              confirmButtonText: \"O.K\",\n            });\n          });\n        });\n    },\n\n    checkDate(fecha) {\n      if (moment().isAfter(\"fecha\")) return true;\n    },\n\n    seeNextConcourses() {\n      const self = this;\n      // Cojo token e id.\n      const token = localStorage.getItem(\"token\");\n      const data = localStorage.getItem(\"id\");\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\n      console.log(token);\n      console.log(data);\n\n      // Petición get a mi ruta del Back para consultar próximos concursos en los que no está todavía inscrito\n      axios\n        .get(\"http://localhost:3003/concursos/proximamente/\" + data)\n\n        .then(function (response) {\n          console.log(response);\n\n          // En user tengo ahora el acceso directo a este usuario concreto.\n          self.proxconcursos = response.data.data;\n        })\n\n        .catch(function (error) {\n          Swal.fire({\n            title: \"✅\",\n            text: error.response.data.message,\n            confirmButtonText: \"O.K\",\n          }).then((result) => {\n            if (result.value) {\n              self.getDataUser();\n            }\n          });\n          console.log(error.response.data.message);\n        });\n    },\n\n    cancelSuscription(index) {\n      const self = this;\n      /*  const id_concurso = self.proxconcursos[index].id_concurso; */\n      const id_concurso = self.proxconcursos[index].id_concurso;\n      //Cojo token e id\n      const token = localStorage.getItem(\"token\");\n      const data = localStorage.getItem(\"id\");\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      axios\n        .delete(\n          \"http://localhost:3003/concursos/inscripciones/borrar/\" + id_concurso\n        )\n\n        .then(function (response) {\n          // Enviamos mensaje de valoración\n          console.log(response);\n          Swal.fire({\n            title: \"✅\",\n            text: \"Hemos tramitado tu baja correctamente\",\n            confirmButtonText: \"O.K\",\n          }).catch(function (error) {\n            /*  console.log(error.response.data); */\n            Swal.fire({\n              title: \"⚠️\",\n              text:\n                \"Ha habido un error, es posible que ya no estés suscrita a este concurso\",\n              confirmButtonText: \"O.K\",\n            });\n          });\n        });\n    },\n  },\n\n  created() {\n    this.getDataUser();\n  },\n};\n</script>\n\n<style scoped>\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  border-radius: 150px;\n  width: 100%;\n}\n\n.modalbox {\n  background: #fefefe;\n  margin: 15% auto;\n  padding: 20px;\n  border: 1px solid #888;\n  width: 40%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  border-radius: 50px;\n  border: solid 2px black;\n  box-shadow: 0 0 1px rgb(12, 12, 12);\n}\n</style>\n"]}]}