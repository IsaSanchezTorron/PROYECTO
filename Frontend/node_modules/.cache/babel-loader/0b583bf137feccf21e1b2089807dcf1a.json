{"remainingRequest":"/home/hab07/Desktop/ProyectoBackFront/Frontend/node_modules/babel-loader/lib/index.js!/home/hab07/Desktop/ProyectoBackFront/Backend/controllers/USUARIOS/login.js","dependencies":[{"path":"/home/hab07/Desktop/ProyectoBackFront/Backend/controllers/USUARIOS/login.js","mtime":1592301376979},{"path":"/home/hab07/Desktop/ProyectoBackFront/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hab07/Desktop/ProyectoBackFront/Frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9zbGljZWRUb0FycmF5ID0gcmVxdWlyZSgiL2hvbWUvaGFiMDcvRGVza3RvcC9Qcm95ZWN0b0JhY2tGcm9udC9Gcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5Iik7CgpyZXF1aXJlKCJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiKTsKCnZhciBfYXN5bmNUb0dlbmVyYXRvciA9IHJlcXVpcmUoIi9ob21lL2hhYjA3L0Rlc2t0b3AvUHJveWVjdG9CYWNrRnJvbnQvRnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvciIpOwoKcmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCk7Cgp2YXIgYmNyeXB0ID0gcmVxdWlyZSgnYmNyeXB0Jyk7Cgp2YXIgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7Cgp2YXIgX3JlcXVpcmUgPSByZXF1aXJlKCcuLi8uLi9EQicpLAogICAgZ2V0Q29ubmVjdGlvbiA9IF9yZXF1aXJlLmdldENvbm5lY3Rpb247Cgp2YXIgX3JlcXVpcmUyID0gcmVxdWlyZSgnLi4vLi4vaGVscGVycycpLAogICAgZ2VuZXJhdGVFcnJvciA9IF9yZXF1aXJlMi5nZW5lcmF0ZUVycm9yOwoKdmFyIF9yZXF1aXJlMyA9IHJlcXVpcmUoJy4uLy4uL3ZhbGlkYXRpb25zL2xvZ2luJyksCiAgICBsb2dpblNjaGVtYSA9IF9yZXF1aXJlMy5sb2dpblNjaGVtYTsKCmZ1bmN0aW9uIGxvZ2luVXNlcihfeCwgX3gyLCBfeDMpIHsKICByZXR1cm4gX2xvZ2luVXNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfbG9naW5Vc2VyKCkgewogIF9sb2dpblVzZXIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocmVxLCByZXMsIG5leHQpIHsKICAgIHZhciBjb25uZWN0aW9uLCBfcmVxJGJvZHksIG1haWwsIGNvbnRyYXNlbmhhLCBfeWllbGQkY29ubmVjdGlvbiRxdWUsIF95aWVsZCRjb25uZWN0aW9uJHF1ZTIsIGRiVXNlciwgX2RiVXNlciwgdXNlciwgcGFzc3dvcmRzTWF0aCwgdG9rZW5QYXlsb2FkLCB0b2tlbjsKCiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGxvZ2luU2NoZW1hLnZhbGlkYXRlQXN5bmMocmVxLmJvZHkpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgX3JlcSRib2R5ID0gcmVxLmJvZHksIG1haWwgPSBfcmVxJGJvZHkubWFpbCwgY29udHJhc2VuaGEgPSBfcmVxJGJvZHkuY29udHJhc2VuaGE7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICByZXR1cm4gZ2V0Q29ubmVjdGlvbigpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgY29ubmVjdGlvbiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbi5xdWVyeSgnU0VMRUNUIGlkX3VzdWFyaW8sIG5vbWJyZSwgbWFpbCwgY29udHJhc2VuaGEsIHJvbCAgRlJPTSBVU1VBUklPUyBXSEVSRSBtYWlsPT8gQU5EIGFjdGl2bz0xJywgW21haWxdKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIF95aWVsZCRjb25uZWN0aW9uJHF1ZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF95aWVsZCRjb25uZWN0aW9uJHF1ZTIgPSBfc2xpY2VkVG9BcnJheShfeWllbGQkY29ubmVjdGlvbiRxdWUsIDEpOwogICAgICAgICAgICBkYlVzZXIgPSBfeWllbGQkY29ubmVjdGlvbiRxdWUyWzBdOwoKICAgICAgICAgICAgaWYgKGRiVXNlci5sZW5ndGgpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRocm93IGdlbmVyYXRlRXJyb3IoJ0FjdHVhbG1lbnRlIG5vIGhheSBuaW5ndW4gdXN1YXJpbyBjb24gZXNlIGNvcnJlbyBlbGVjdHLDs25pY28sIGNvbXBydWViYSBxdWUgZXN0w6FzIHJlZ2lzdHJhZG8gbyBjaGVxdWVhIHR1IGNvcnJlbyBwYXJhIGFjdGl2YXJsYScsIDQwNCk7CgogICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgX2RiVXNlciA9IF9zbGljZWRUb0FycmF5KGRiVXNlciwgMSksIHVzZXIgPSBfZGJVc2VyWzBdOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgIHJldHVybiBiY3J5cHQuY29tcGFyZShjb250cmFzZW5oYSwgdXNlci5jb250cmFzZW5oYSk7CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgcGFzc3dvcmRzTWF0aCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICBpZiAocGFzc3dvcmRzTWF0aCkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyMDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhyb3cgZ2VuZXJhdGVFcnJvcignUGFzc3dvcmQgaW5jb3JyZWN0YScsIDQwMSk7CgogICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgICAgdG9rZW5QYXlsb2FkID0gewogICAgICAgICAgICAgIGlkOiB1c2VyLmlkX3VzdWFyaW8sCiAgICAgICAgICAgICAgcm9sOiB1c2VyLnJvbAogICAgICAgICAgICB9OwogICAgICAgICAgICB0b2tlbiA9IGp3dC5zaWduKHRva2VuUGF5bG9hZCwgcHJvY2Vzcy5lbnYuU0VDUkVULCB7CiAgICAgICAgICAgICAgZXhwaXJlc0luOiAnMzBkJwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmVzLnNlbmQoewogICAgICAgICAgICAgIHN0YXR1czogJ29rJywKICAgICAgICAgICAgICBtZXNzYWdlOiAnTG9naW4gY29ycmVjdG8sIGNvw7FvIScsCiAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAgdG9rZW46IHRva2VuCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI4OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDI1OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjU7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIG5leHQoX2NvbnRleHQudDApOwoKICAgICAgICAgIGNhc2UgMjg6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyODsKICAgICAgICAgICAgaWYgKGNvbm5lY3Rpb24pIGNvbm5lY3Rpb24ucmVsZWFzZSgpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuZmluaXNoKDI4KTsKCiAgICAgICAgICBjYXNlIDMxOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgMjUsIDI4LCAzMV1dKTsKICB9KSk7CiAgcmV0dXJuIF9sb2dpblVzZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKbW9kdWxlLmV4cG9ydHMgPSB7CiAgbG9naW5Vc2VyOiBsb2dpblVzZXIKfTs="},{"version":3,"sources":["/home/hab07/Desktop/ProyectoBackFront/Backend/controllers/USUARIOS/login.js"],"names":["require","config","bcrypt","jwt","getConnection","generateError","loginSchema","loginUser","req","res","next","validateAsync","body","mail","contrasenha","connection","query","dbUser","length","user","compare","passwordsMath","tokenPayload","id","id_usuario","rol","token","sign","process","env","SECRET","expiresIn","send","status","message","data","release","module","exports"],"mappings":";;;;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,cAAD,CAAnB;;eAE0BA,OAAO,CAAC,UAAD,C;IAAzBI,a,YAAAA,a;;gBACkBJ,OAAO,CAAC,eAAD,C;IAAzBK,a,aAAAA,a;;gBACgBL,OAAO,CAAC,yBAAD,C;IAAvBM,W,aAAAA,W;;SAEOC,S;;;;;uEAAf,iBAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIUJ,WAAW,CAACK,aAAZ,CAA0BH,GAAG,CAACI,IAA9B,CAJV;;AAAA;AAAA,wBAMkCJ,GAAG,CAACI,IANtC,EAMYC,IANZ,aAMYA,IANZ,EAMkBC,WANlB,aAMkBA,WANlB;AAAA;AAAA,mBAOuBV,aAAa,EAPpC;;AAAA;AAOIW,YAAAA,UAPJ;AAAA;AAAA,mBAUcA,UAAU,CAACC,KAAX,CACR,4FADQ,EAER,CAACH,IAAD,CAFQ,CAVd;;AAAA;AAAA;AAAA;AASMI,YAAAA,MATN;;AAAA,gBAeSA,MAAM,CAACC,MAfhB;AAAA;AAAA;AAAA;;AAAA,kBAgBYb,aAAa,CACjB,iIADiB,EAEjB,GAFiB,CAhBzB;;AAAA;AAAA,qCAsBmBY,MAtBnB,MAsBWE,IAtBX;AAAA;AAAA,mBAuBgCjB,MAAM,CAACkB,OAAP,CAAeN,WAAf,EAA4BK,IAAI,CAACL,WAAjC,CAvBhC;;AAAA;AAuBUO,YAAAA,aAvBV;;AAAA,gBAyBSA,aAzBT;AAAA;AAAA;AAAA;;AAAA,kBA0BYhB,aAAa,CAAC,qBAAD,EAAwB,GAAxB,CA1BzB;;AAAA;AA6BUiB,YAAAA,YA7BV,GA6ByB;AAAEC,cAAAA,EAAE,EAAEJ,IAAI,CAACK,UAAX;AAAuBC,cAAAA,GAAG,EAAEN,IAAI,CAACM;AAAjC,aA7BzB;AA8BUC,YAAAA,KA9BV,GA8BkBvB,GAAG,CAACwB,IAAJ,CAASL,YAAT,EAAuBM,OAAO,CAACC,GAAR,CAAYC,MAAnC,EAA2C;AACvDC,cAAAA,SAAS,EAAE;AAD4C,aAA3C,CA9BlB;AAkCItB,YAAAA,GAAG,CAACuB,IAAJ,CAAS;AACPC,cAAAA,MAAM,EAAE,IADD;AAEPC,cAAAA,OAAO,EAAE,uBAFF;AAGPC,cAAAA,IAAI,EAAE;AAAET,gBAAAA,KAAK,EAALA;AAAF;AAHC,aAAT;AAlCJ;AAAA;;AAAA;AAAA;AAAA;AAwCIhB,YAAAA,IAAI,aAAJ;;AAxCJ;AAAA;AA0CI,gBAAIK,UAAJ,EAAgBA,UAAU,CAACqB,OAAX;AA1CpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA8CAC,MAAM,CAACC,OAAP,GAAiB;AAAE/B,EAAAA,SAAS,EAATA;AAAF,CAAjB","sourcesContent":["require('dotenv').config();\n\nconst bcrypt = require('bcrypt');\nconst jwt = require('jsonwebtoken');\n\nconst { getConnection } = require('../../DB');\nconst { generateError } = require('../../helpers');\nconst { loginSchema } = require('../../validations/login');\n\nasync function loginUser(req, res, next) {\n  let connection;\n\n  try {\n    await loginSchema.validateAsync(req.body);\n\n    const { mail, contrasenha } = req.body;\n    connection = await getConnection();\n    const [\n      dbUser\n    ] = await connection.query(\n      'SELECT id_usuario, nombre, mail, contrasenha, rol  FROM USUARIOS WHERE mail=? AND activo=1',\n      [mail]\n    );\n\n    if (!dbUser.length) {\n      throw generateError(\n        'Actualmente no hay ningun usuario con ese correo electrónico, comprueba que estás registrado o chequea tu correo para activarla',\n        404\n      );\n    }\n\n    const [user] = dbUser;\n    const passwordsMath = await bcrypt.compare(contrasenha, user.contrasenha);\n\n    if (!passwordsMath) {\n      throw generateError('Password incorrecta', 401);\n    }\n\n    const tokenPayload = { id: user.id_usuario, rol: user.rol };\n    const token = jwt.sign(tokenPayload, process.env.SECRET, {\n      expiresIn: '30d'\n    });\n\n    res.send({\n      status: 'ok',\n      message: 'Login correcto, coño!',\n      data: { token }\n    });\n  } catch (error) {\n    next(error);\n  } finally {\n    if (connection) connection.release();\n  }\n}\n\nmodule.exports = { loginUser };\n"]}]}